# generated by datamodel-codegen:
#   filename:  https://optimizer-offgridplanner-app.apps2.rl-institut.de/schema/grid/input
#   timestamp: 2025-06-25T16:18:31+00:00

from __future__ import annotations

from pydantic import BaseModel, ConfigDict


class Nodes(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    latitude: list[float]
    longitude: list[float]
    how_added: list[str]
    node_type: list[str]
    consumer_type: list[str]
    custom_specification: list[str | None]
    shs_options: list[float]
    consumer_detail: list[str]
    is_connected: list[bool]
    distance_to_load_center: list[float] | None = None
    distribution_cost: list[float] | None = None
    parent: list[str] | None = None


class DistributionCable(BaseModel):
    lifetime: int
    capex: float
    max_length: float
    epc: float


class ConnectionCable(BaseModel):
    lifetime: int
    capex: float
    max_length: float
    epc: float


class Pole(BaseModel):
    lifetime: int
    capex: float
    max_n_connections: int
    epc: float


class Mg(BaseModel):
    connection_cost: float
    epc: float


class Shs(BaseModel):
    include: bool
    max_grid_cost: float


class GridDesign(BaseModel):
    distribution_cable: DistributionCable
    connection_cable: ConnectionCable
    pole: Pole
    mg: Mg
    shs: Shs | None = None


class Model(BaseModel):
    nodes: Nodes
    grid_design: GridDesign
    yearly_demand: float
