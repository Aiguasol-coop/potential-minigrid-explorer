x-environment: &global_env
  DB_HOST: db-interactive
  DB_PORT: 5432
  DB_NAME: test
  DB_SUPERADMIN_USERNAME: postgres

  # To be able to use different locales we need to generate OS locales in the postgres container:
  DB_LOCALE: en_US.utf8
  DB_ICU_LOCALE: en-US-x-icu

services:
  env-starter:
    image: alpine
    restart: no
    healthcheck:
      test: "[ -f /run/secrets/db_superadmin_password ] && [ -f /workspaces/PROJECTNAME/.env ]"
      interval: 1s
      retries: 5
      start_period: 0s
    environment:
      <<: *global_env
    volumes:
      - ../..:/workspaces/PROJECTNAME:cached
      - secrets_volume:/run/secrets
    command:
      - sh
      - -c
      - |
        apk add --no-cache openssl
        echo 'DO NOT DO THIS IN PRODUCTION!: Writing a test only secret for db_role_db_owner_password...'
        echo 'test' > /run/secrets/db_role_db_owner_password
        openssl rand -hex 32 > /run/secrets/db_superadmin_password
        echo 'Generating initial .env file with variables in docker-compose.yml file...'
        printenv | grep '^DB_' > /workspaces/PROJECTNAME/.env
        echo '.env file is ready!'
        sleep infinity

  devcontainer:
    image: mcr.microsoft.com/devcontainers/python:1-3.13-bookworm
    depends_on:
      - env-starter
    volumes:
      - ../..:/workspaces/PROJECTNAME:cached
      - secrets_volume:/run/secrets:ro
    stdin_open: true # Enables interactive STDIN
    tty: true # Allocates a pseudo-TTY
    command: sleep infinity

  db-interactive:
    image: postgres:17
    container_name: postgres-interactive-testing
    restart: unless-stopped
    depends_on:
      env-starter:
        condition: service_healthy
    environment:
      <<: *global_env
      POSTGRES_USER: ${DB_SUPERADMIN_USERNAME}
      POSTGRES_PASSWORD_FILE: /run/secrets/db_superadmin_password
    volumes:
      - secrets_volume:/run/secrets:ro
      - ../../database/postgres-setup.d:/docker-entrypoint-initdb.d:ro
      - volatile_db_interactive:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"

  db-automatic:
    image: postgres:17
    container_name: postgres-automatic-testing
    restart: unless-stopped
    depends_on:
      env-starter:
        condition: service_healthy
    environment:
      <<: *global_env
      POSTGRES_USER: ${DB_SUPERADMIN_USERNAME}
      POSTGRES_PASSWORD_FILE: /run/secrets/db_superadmin_password
    volumes:
      - secrets_volume:/run/secrets:ro
      - ../../database/postgres-setup.d:/docker-entrypoint-initdb.d:ro
      - volatile_db_automatic:/var/lib/postgresql/data
    ports:
      - "65432:5432"

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: pgadmin
    restart: unless-stopped
    depends_on:
      - db-interactive
    environment:
      PGADMIN_DEFAULT_EMAIL: test@example.com
      PGADMIN_DEFAULT_PASSWORD: test
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80" # Access via localhost:8080 on host machine
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ../../tests/pgadmin_config/servers.json:/pgadmin4/servers.json:ro

volumes:
  secrets_volume:

  volatile_db_interactive:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs

  volatile_db_automatic:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs

  pgadmin_data:
